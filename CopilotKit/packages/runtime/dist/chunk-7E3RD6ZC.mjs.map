{"version":3,"sources":["../src/graphql/types/converted/index.ts"],"sourcesContent":["import {\n  ActionExecutionMessageInput,\n  ResultMessageInput,\n  TextMessageInput,\n  AgentStateMessageInput,\n  ContentMessageInput,\n  TextContentBlockInput,\n  ImageURLContentBlockInput,\n} from \"../../inputs/message.input\";\nimport { BaseMessageInput } from \"../base\";\nimport { ActionExecutionScope, MessageRole } from \"../enums\";\n\nexport type MessageContent = ImageURLContentBlockInput | TextContentBlockInput;\n\ntype MessageType =\n  | \"TextMessage\"\n  | \"ContentMessage\"\n  | \"ActionExecutionMessage\"\n  | \"ResultMessage\"\n  | \"AgentStateMessage\";\n\nexport class Message extends BaseMessageInput {\n  type: MessageType;\n\n  isTextMessage(): this is TextMessage {\n    return this.type === \"TextMessage\";\n  }\n\n  isContentMessage(): this is ContentMessage {\n    return this.type === \"ContentMessage\";\n  }\n\n  isActionExecutionMessage(): this is ActionExecutionMessage {\n    return this.type === \"ActionExecutionMessage\";\n  }\n\n  isResultMessage(): this is ResultMessage {\n    return this.type === \"ResultMessage\";\n  }\n\n  isAgentStateMessage(): this is AgentStateMessage {\n    return this.type === \"AgentStateMessage\";\n  }\n}\n\nexport class TextMessage extends Message implements TextMessageInput {\n  type: MessageType = \"TextMessage\";\n  content: string;\n  role: MessageRole;\n}\n\nexport class ContentMessage extends Message implements ContentMessageInput {\n  type: MessageType = \"ContentMessage\";\n  content: MessageContent[]; // Correctly maps to the MessageContentInput array\n  role: MessageRole;\n}\n\nexport class ActionExecutionMessage\n  extends Message\n  implements Omit<ActionExecutionMessageInput, \"arguments\">\n{\n  type: MessageType = \"ActionExecutionMessage\";\n  name: string;\n  arguments: Record<string, any>;\n  scope: ActionExecutionScope;\n}\n\nexport class ResultMessage extends Message implements ResultMessageInput {\n  type: MessageType = \"ResultMessage\";\n  actionExecutionId: string;\n  actionName: string;\n  result: string;\n}\n\nexport class AgentStateMessage extends Message implements Omit<AgentStateMessageInput, \"state\"> {\n  type: MessageType = \"AgentStateMessage\";\n  threadId: string;\n  agentName: string;\n  nodeName: string;\n  runId: string;\n  active: boolean;\n  role: MessageRole;\n  state: any;\n  running: boolean;\n}\n"],"mappings":";;;;;;;;AAqBO,IAAMA,UAAN,cAAsBC,iBAAAA;EAC3BC;EAEAC,gBAAqC;AACnC,WAAO,KAAKD,SAAS;EACvB;EAEAE,mBAA2C;AACzC,WAAO,KAAKF,SAAS;EACvB;EAEAG,2BAA2D;AACzD,WAAO,KAAKH,SAAS;EACvB;EAEAI,kBAAyC;AACvC,WAAO,KAAKJ,SAAS;EACvB;EAEAK,sBAAiD;AAC/C,WAAO,KAAKL,SAAS;EACvB;AACF;AAtBaF;AAwBN,IAAMQ,cAAN,cAA0BR,QAAAA;EAC/BE,OAAoB;EACpBO;EACAC;AACF;AAJaF;AAMN,IAAMG,iBAAN,cAA6BX,QAAAA;EAClCE,OAAoB;EACpBO;EACAC;AACF;AAJaC;AAMN,IAAMC,yBAAN,cACGZ,QAAAA;EAGRE,OAAoB;EACpBW;EACAC;EACAC;AACF;AARaH;AAUN,IAAMI,gBAAN,cAA4BhB,QAAAA;EACjCE,OAAoB;EACpBe;EACAC;EACAC;AACF;AALaH;AAON,IAAMI,oBAAN,cAAgCpB,QAAAA;EACrCE,OAAoB;EACpBmB;EACAC;EACAC;EACAC;EACAC;EACAf;EACAgB;EACAC;AACF;AAVaP;","names":["Message","BaseMessageInput","type","isTextMessage","isContentMessage","isActionExecutionMessage","isResultMessage","isAgentStateMessage","TextMessage","content","role","ContentMessage","ActionExecutionMessage","name","arguments","scope","ResultMessage","actionExecutionId","actionName","result","AgentStateMessage","threadId","agentName","nodeName","runId","active","state","running"]}